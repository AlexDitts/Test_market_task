# Generated by Django 4.2.2 on 2024-06-16 06:11

import apps.market.validators
import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import utils.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Basket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("is_active", "активно"),
                            ("unaccepted", "снято с резервации"),
                            ("complete", "оформлен"),
                        ],
                        default="is_active",
                        verbose_name="Статус корзины клиента",
                    ),
                ),
                (
                    "update_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления",
                        null=True,
                        verbose_name="Дата и время последнего обновления",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Общая стоимость корзины",
                        max_digits=20,
                        null=True,
                        verbose_name="Общая стоимость",
                    ),
                ),
                (
                    "discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Итоговая скидка на товары в корзине",
                        max_digits=20,
                        null=True,
                        verbose_name="Итоговая скидка",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Номер заказа",
                    ),
                ),
                (
                    "order_paymentin",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Номер выплаты заказа",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Полный адрес",
                    ),
                ),
                (
                    "customer_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "\\A[+,8]\\d{10,13}",
                                "Телефон должен содержать от 11 до 13 цифр.",
                            )
                        ],
                        verbose_name="Номер телефона получателя",
                    ),
                ),
                (
                    "customer_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Имя получателя",
                    ),
                ),
                (
                    "customer_surname",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Фамилия получателя",
                    ),
                ),
                (
                    "customer_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="E-mail получателя",
                    ),
                ),
                (
                    "delivery_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        help_text="Стоимость доставки",
                        max_digits=20,
                        null=True,
                        verbose_name="Стоимость доставки",
                    ),
                ),
                (
                    "delivery_period",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=0,
                        help_text="Срок доставки товара",
                        null=True,
                        verbose_name="Срок доставки",
                    ),
                ),
                (
                    "delivery_date_from",
                    models.DateField(
                        blank=True,
                        help_text="Минимальная дата доставки",
                        null=True,
                        verbose_name="Дата доставки",
                    ),
                ),
                (
                    "delivery_date_to",
                    models.DateField(
                        blank=True,
                        help_text="Максимальная дата доставки",
                        null=True,
                        verbose_name="Дата доставки",
                    ),
                ),
                (
                    "delivery_time",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Время доставки",
                        null=True,
                        verbose_name="Время доставки",
                    ),
                ),
                (
                    "pvz_code",
                    models.CharField(
                        blank=True,
                        help_text="Код пункта выдачи заказа СДЭК",
                        null=True,
                        verbose_name="Пункт выдачи заказа",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("online", "Онлайн"),
                            ("on_receipt_card", "Картой при получении"),
                            ("on_receipt_cash", "Наличными при получении"),
                            ("koronapay", "Золотая корона"),
                            ("legal", "Договор для юридических лиц"),
                        ],
                        null=True,
                        verbose_name="Способ платежа",
                    ),
                ),
                (
                    "payment_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="Ссылка на оплату"
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("paid", "оплачен"),
                            ("UNPAID", "не оплачен"),
                            ("awaiting_payment", "ожидает оплаты"),
                        ],
                        default="UNPAID",
                        verbose_name="Статус оплаты",
                    ),
                ),
                (
                    "order_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата совершения заказа"
                    ),
                ),
                (
                    "token",
                    models.UUIDField(
                        blank=True, null=True, verbose_name="Токен платежа"
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        unique=True,
                        verbose_name="Идентификатор платежа",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        help_text="Почтовый индекс",
                        null=True,
                        verbose_name="Индекс",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        help_text="Страна получателя",
                        null=True,
                        verbose_name="Страна получателя",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="Город получателя",
                        null=True,
                        verbose_name="Город получателя",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True, help_text="Регион", null=True, verbose_name="Регион"
                    ),
                ),
                (
                    "street_with_type",
                    models.CharField(
                        blank=True, help_text="Улица", null=True, verbose_name="Улица"
                    ),
                ),
                (
                    "house_type_full",
                    models.CharField(
                        blank=True,
                        help_text="Тип строения (дом, корпус и т. д.)",
                        null=True,
                        verbose_name="Тип строения",
                    ),
                ),
                (
                    "house",
                    models.CharField(
                        blank=True,
                        help_text="Почтовый индекс",
                        null=True,
                        verbose_name="Индекс",
                    ),
                ),
                (
                    "block_type_full",
                    models.CharField(
                        blank=True,
                        help_text="Тип блока",
                        null=True,
                        verbose_name="Тип блока",
                    ),
                ),
                (
                    "block",
                    models.CharField(
                        blank=True, help_text="Блок", null=True, verbose_name="Блок"
                    ),
                ),
                (
                    "flat",
                    models.CharField(
                        blank=True,
                        help_text="Квартира",
                        null=True,
                        verbose_name="Квартира",
                    ),
                ),
                (
                    "unparsed_parts",
                    models.CharField(
                        blank=True,
                        help_text="Комментарий",
                        null=True,
                        verbose_name="Комментарий",
                    ),
                ),
                (
                    "geo_lat",
                    models.CharField(
                        blank=True,
                        help_text="Координаты. Широта",
                        null=True,
                        verbose_name="Широта",
                    ),
                ),
                (
                    "geo_lon",
                    models.CharField(
                        blank=True,
                        help_text="Координаты. Долгота",
                        null=True,
                        verbose_name="Долгота",
                    ),
                ),
                (
                    "country_iso_code",
                    models.CharField(
                        blank=True,
                        help_text="Код страны",
                        null=True,
                        verbose_name="Код страны",
                    ),
                ),
                (
                    "city_fias_id",
                    models.CharField(
                        blank=True,
                        help_text="ФИАС города",
                        null=True,
                        verbose_name="ФИАС города",
                    ),
                ),
                (
                    "city_kladr_id",
                    models.CharField(
                        blank=True, help_text="КЛАДР", null=True, verbose_name="КЛАДР"
                    ),
                ),
                (
                    "buy_to_order",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Покупка под заказ",
                        null=True,
                        verbose_name="Покупка под заказ",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказы",
                "verbose_name_plural": "Заказы",
            },
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text="Идентификатор Moi Sklad.",
                        max_length=512,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Название товара отображаемое на сайте и используемое при поиске.",
                        max_length=512,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Порядковый номер",
                        null=True,
                        verbose_name="Приоритет",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="market/brands",
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "page_title",
                    models.CharField(
                        blank=True,
                        help_text="Заголовок в табе страницы",
                        max_length=256,
                        null=True,
                        verbose_name="Заголовок страницы",
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="Описание страницы",
                        null=True,
                        verbose_name="meta_description",
                    ),
                ),
                (
                    "h1",
                    models.TextField(
                        blank=True,
                        help_text="Заголовок h1",
                        null=True,
                        verbose_name="h1",
                    ),
                ),
                (
                    "text_under_title",
                    models.TextField(
                        blank=True,
                        help_text="Текст под заголовком",
                        null=True,
                        verbose_name="Текст под заголовком",
                    ),
                ),
                (
                    "text_under_product",
                    models.TextField(
                        blank=True,
                        help_text="Текст под товарами",
                        null=True,
                        verbose_name="Текст под товарами",
                    ),
                ),
                (
                    "breadcrumb",
                    models.CharField(
                        blank=True,
                        help_text="Breadcrumb",
                        max_length=100,
                        null=True,
                        verbose_name="Breadcrumb",
                    ),
                ),
            ],
            options={
                "verbose_name": "Бренд",
                "verbose_name_plural": "Бренды",
                "ordering": ("priority",),
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False, help_text="Активно", verbose_name="Активно"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, verbose_name="Название категории"),
                ),
                (
                    "category_image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="market",
                        verbose_name="Изображение категории",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="children",
                        to="market.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория товара",
                "verbose_name_plural": "Категории товара",
            },
        ),
        migrations.CreateModel(
            name="Characteristic",
            fields=[
                (
                    "id",
                    models.CharField(
                        help_text="Идентификатор Moi Sklad.",
                        max_length=512,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Название характеристики.",
                        max_length=512,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вид характеристики",
                "verbose_name_plural": "Виды характеристик",
            },
        ),
        migrations.CreateModel(
            name="CrossSaleProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Рекомендация",
                "verbose_name_plural": "Рекомендации",
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Избранное",
                "verbose_name_plural": "Избранное",
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        null=True,
                        unique=True,
                        validators=[apps.market.validators.validate_nonzero],
                        verbose_name="Приоритет",
                    ),
                ),
                ("name", models.CharField(unique=True, verbose_name="Имя лейбла")),
                (
                    "type_label",
                    models.CharField(
                        choices=[
                            ("promotion", "Скидка"),
                            ("new", "Новинка"),
                            ("bestseller", "Хит"),
                            ("custom", "Пользовательский"),
                        ],
                        default="custom",
                        verbose_name="Тип лейбла",
                    ),
                ),
                (
                    "color",
                    colorfield.fields.ColorField(
                        blank=True,
                        default=None,
                        image_field=None,
                        max_length=18,
                        null=True,
                        samples=[
                            ("#000000", "Черный"),
                            ("#FFFFFF", "Белый"),
                            ("#FF0000", "Красный"),
                            ("#00FF00", "Зеленый"),
                            ("#0000FF", "Синий"),
                            ("#FFFF00", "Желтый"),
                            ("#FFC0CB", "Розовый"),
                            ("#FFA500", "Оранжевый"),
                            ("#800080", "Фиолетовый"),
                            ("#00FFFF", "Голубой"),
                        ],
                        verbose_name="Цвет",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лейбл",
                "verbose_name_plural": "Лейблы",
                "ordering": ("priority",),
            },
        ),
        migrations.CreateModel(
            name="OrderState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Название статуса"),
                ),
            ],
            options={
                "verbose_name": "Статус заказа",
                "verbose_name_plural": "Статусы заказов",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "archived",
                    models.BooleanField(
                        default=False,
                        help_text="Статус архивированности товара.",
                        verbose_name="Архивированный товар",
                    ),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Идентификатор Moi Sklad.",
                        max_length=512,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="Название товара отображаемое на сайте и используемое при поиске.",
                        max_length=512,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Код товара Moi Sklad.",
                        max_length=512,
                        null=True,
                        verbose_name="Код товара",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Описание товара Moi Sklad.",
                        null=True,
                        verbose_name="Описание товара",
                    ),
                ),
                (
                    "external_code",
                    models.CharField(
                        blank=True,
                        help_text="Дополнительный код товара Moi Sklad.",
                        max_length=512,
                        null=True,
                        verbose_name="Дополнительный код товара",
                    ),
                ),
                (
                    "article",
                    models.CharField(
                        blank=True,
                        help_text="Артикул товара.",
                        max_length=512,
                        null=True,
                        verbose_name="Артикул",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Вес товара в кг.",
                        max_digits=20,
                        null=True,
                        verbose_name="Вес",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Объем товара.",
                        max_digits=20,
                        null=True,
                        verbose_name="Объем",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Время обновления"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Активность товара",
                        verbose_name="Активность",
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="market.brand",
                        verbose_name="Бренд",
                    ),
                ),
                (
                    "category",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        to="market.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "crossale",
                    models.ManyToManyField(
                        blank=True,
                        through="market.CrossSaleProduct",
                        to="market.product",
                        verbose_name="Рекомендуемые товары",
                    ),
                ),
                (
                    "label",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="market.label",
                        verbose_name="Лейбл",
                    ),
                ),
                (
                    "user",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        through="market.Favorite",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Избранное пользователя",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар на витрине",
                "verbose_name_plural": "Товары на витрине",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=127, unique=True, verbose_name="Название тега"
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=32767, null=True, verbose_name="Приоритет"
                    ),
                ),
                (
                    "page_title",
                    models.CharField(
                        blank=True,
                        help_text="Заголовок в табе страницы",
                        max_length=256,
                        null=True,
                        verbose_name="Заголовок страницы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
            },
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        help_text="Идентификатор Moi Sklad.",
                        max_length=512,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "archived",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="Статус активности варианта.",
                        verbose_name="Архивированный вариант",
                    ),
                ),
                (
                    "to_order",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Вариант товара будет под заказ.",
                        null=True,
                        verbose_name="Вариант под заказ",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Название варианта отображаемое на сайте и используемое при поиске.",
                        max_length=512,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        help_text="Код варианта Moi Sklad.",
                        max_length=512,
                        null=True,
                        verbose_name="Код варианта",
                    ),
                ),
                (
                    "external_code",
                    models.CharField(
                        blank=True,
                        help_text="Дополнительный код варианта Moi Sklad.",
                        max_length=512,
                        null=True,
                        verbose_name="Дополнительный код варианта",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена варианта.",
                        max_digits=20,
                        null=True,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "stock",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Остаток варианта.",
                        max_digits=20,
                        null=True,
                        verbose_name="Остаток",
                    ),
                ),
                (
                    "reserve",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Варианты в резерве.",
                        max_digits=20,
                        null=True,
                        verbose_name="Резерв",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Количество варианта.",
                        max_digits=20,
                        null=True,
                        verbose_name="Доступно",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена распродажи варианта.",
                        max_digits=20,
                        null=True,
                        verbose_name="Цена распродажи",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        blank=True,
                        default=True,
                        help_text="Активность варианта",
                        null=True,
                        verbose_name="Активность",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="market.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Вариант",
                "verbose_name_plural": "Варианты",
            },
        ),
        migrations.CreateModel(
            name="TagProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="market.product"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="market.tag"
                    ),
                ),
            ],
            options={
                "verbose_name": 'Связь "тег - товар"',
            },
        ),
        migrations.AddField(
            model_name="tag",
            name="product",
            field=models.ManyToManyField(
                blank=True,
                related_name="tags",
                through="market.TagProduct",
                to="market.product",
                verbose_name="Товары",
            ),
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Идентификатор Moi Sklad.",
                        max_length=512,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="Идентификатор",
                    ),
                ),
                (
                    "image",
                    utils.fields.ImageOrSVGField(
                        upload_to="market/products", verbose_name="Изображение"
                    ),
                ),
                (
                    "miniature",
                    utils.fields.ImageOrSVGField(
                        null=True, upload_to="market/products", verbose_name="Миниатюра"
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=32767,
                        help_text="Порядковый номер отображения на сайте",
                        null=True,
                        verbose_name="Приоритет",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="market.product",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение товара",
                "verbose_name_plural": "Изображения товара",
            },
        ),
        migrations.CreateModel(
            name="ItemBasket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True,
                        max_length=512,
                        null=True,
                        verbose_name="Код варианта товара",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Название товара добавленного в корзину",
                        max_length=512,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "article",
                    models.CharField(
                        blank=True,
                        help_text="Артикул товара",
                        max_length=128,
                        null=True,
                        verbose_name="Артикул",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена добавленного в корзину.",
                        max_digits=20,
                        null=True,
                        verbose_name="Цена",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Цена распродажи товара добавленного в корзину",
                        max_digits=20,
                        null=True,
                        verbose_name="Цена распродажи",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="Количество товара в корзине",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "item_total_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Стоимость указанного количества одного наименования товара",
                        max_digits=20,
                        null=True,
                        verbose_name="Общая стоимость товара",
                    ),
                ),
                (
                    "item_total_cost_with_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Стоимость указанного количества одного наименования товара со скидкой",
                        max_digits=20,
                        null=True,
                        verbose_name="Общая стоимость товара со скидкой",
                    ),
                ),
                (
                    "item_discount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Общая скидка на наименование в корзине",
                        max_digits=20,
                        null=True,
                        verbose_name="Общая скидка товара",
                    ),
                ),
                (
                    "basket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_baskets",
                        to="market.basket",
                        verbose_name="Корзина",
                    ),
                ),
                (
                    "variant_product",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="item_baskets",
                        to="market.variant",
                        verbose_name="Вариант товара",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар в корзине",
                "verbose_name_plural": "Товары в корзине",
                "ordering": ("id",),
            },
        ),
        migrations.AddField(
            model_name="favorite",
            name="product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="market.product",
                verbose_name="Товар в избранном",
            ),
        ),
        migrations.AddField(
            model_name="favorite",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь у которого товар в избранном",
            ),
        ),
        migrations.AddField(
            model_name="crosssaleproduct",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="recommendet",
                to="market.product",
                verbose_name="Основной товар",
            ),
        ),
        migrations.AddField(
            model_name="crosssaleproduct",
            name="recommendet",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="market.product",
                verbose_name="Рекомендуемый товар",
            ),
        ),
        migrations.AddField(
            model_name="basket",
            name="order_state",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="orders",
                to="market.orderstate",
                verbose_name="Статус заказа",
            ),
        ),
        migrations.AddField(
            model_name="basket",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="baskets",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Клиент",
            ),
        ),
        migrations.CreateModel(
            name="ActiveBasket",
            fields=[],
            options={
                "verbose_name": "Корзина активная",
                "verbose_name_plural": "Корзины активные",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("market.basket",),
        ),
        migrations.CreateModel(
            name="ItemActiveBasket",
            fields=[],
            options={
                "verbose_name": "Товар в активной корзине",
                "verbose_name_plural": "Товары в активной корзине",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("market.itembasket",),
        ),
        migrations.CreateModel(
            name="ShowcaseProduct",
            fields=[],
            options={
                "verbose_name": "Поступление со склада",
                "verbose_name_plural": "Поступления со склада",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("market.product",),
        ),
        migrations.CreateModel(
            name="VariantImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    utils.fields.ImageOrSVGField(
                        upload_to="market/variants", verbose_name="Изображение"
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="market.variant",
                        verbose_name="Вариант",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение варианта",
                "verbose_name_plural": "Изображения варианта",
                "unique_together": {("image", "variant")},
            },
        ),
        migrations.CreateModel(
            name="VariantCharacteristics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        blank=True,
                        help_text="Значение характеристики.",
                        max_length=512,
                        null=True,
                        verbose_name="Значение",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variant_characteristics",
                        to="market.characteristic",
                        verbose_name="Вид характеристики",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="characteristics",
                        to="market.variant",
                        verbose_name="Вариант",
                    ),
                ),
            ],
            options={
                "verbose_name": "Характеристика",
                "verbose_name_plural": "Характеристики",
                "unique_together": {("type", "variant")},
            },
        ),
        migrations.CreateModel(
            name="ProductCharacteristics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.TextField(
                        blank=True,
                        help_text="Значение характеристики.",
                        null=True,
                        verbose_name="Значение",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="characteristics",
                        to="market.product",
                        verbose_name="Вариант",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_characteristics",
                        to="market.characteristic",
                        verbose_name="Вид характеристики",
                    ),
                ),
            ],
            options={
                "verbose_name": "Характеристика",
                "verbose_name_plural": "Характеристики",
                "indexes": [
                    models.Index(fields=["value"], name="market_prod_value_f3735d_idx")
                ],
                "unique_together": {("type", "product")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="crosssaleproduct",
            unique_together={("product", "recommendet")},
        ),
    ]
