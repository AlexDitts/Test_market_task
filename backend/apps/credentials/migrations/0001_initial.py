# Generated by Django 4.2.2 on 2024-06-16 06:11

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmailCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        blank=True,
                        help_text="Host сервиса через который будет осуществятся отправка email",
                        max_length=512,
                        null=True,
                        verbose_name="Представитель услуг (Host)",
                    ),
                ),
                (
                    "port",
                    models.CharField(
                        blank=True,
                        help_text="Порт SMTP сервера.",
                        max_length=512,
                        null=True,
                        verbose_name="Порт SMTP",
                    ),
                ),
                (
                    "use_tls",
                    models.BooleanField(
                        blank=True,
                        help_text='Если используется SSL - установить "Нет".',
                        null=True,
                        verbose_name="Отправка по протоколу TLS",
                    ),
                ),
                (
                    "use_ssl",
                    models.BooleanField(
                        blank=True,
                        help_text='Если используется TLS - установить "Нет".',
                        null=True,
                        verbose_name="Отправка по протоколу SSL",
                    ),
                ),
                (
                    "host_user",
                    models.CharField(
                        blank=True,
                        help_text="E-mail учётной записи, через который будет осуществятся отправка email.",
                        max_length=512,
                        null=True,
                        verbose_name="Host e-mail",
                    ),
                ),
                (
                    "host_password",
                    models.CharField(
                        blank=True,
                        help_text="Пароль для авторизации учётной записи.",
                        max_length=512,
                        null=True,
                        verbose_name="Host password",
                    ),
                ),
                (
                    "default_from_email",
                    models.EmailField(
                        blank=True,
                        help_text='Обычно тот же, что и "Host e-mail".',
                        max_length=254,
                        null=True,
                        verbose_name="E-mail с которого будут отправляться письма",
                    ),
                ),
            ],
            options={
                "verbose_name": "Данные для подключения Email",
                "verbose_name_plural": "Данные для подключения Email",
            },
        ),
        migrations.CreateModel(
            name="SMSRuCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_id",
                    models.CharField(
                        blank=True,
                        help_text="Если указан API ключ, логин и пароль пропускаем.",
                        max_length=512,
                        null=True,
                        verbose_name="API ключ",
                    ),
                ),
                (
                    "login",
                    models.CharField(
                        blank=True,
                        help_text="Если нет API ключа, то авторизуемся чезер логин и пароль.",
                        max_length=512,
                        null=True,
                        verbose_name="Логин",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        help_text="Если нет API ключа, то авторизуемся чезер логин и пароль.",
                        max_length=512,
                        null=True,
                        verbose_name="Пароль",
                    ),
                ),
                (
                    "test",
                    models.BooleanField(
                        blank=True,
                        help_text="Сообщения в тестом режиме не будут отправлены в действительности, но в обоих сервисах будут созданы записи о них.",
                        null=True,
                        verbose_name="Тестовый режим",
                    ),
                ),
                (
                    "sender",
                    models.CharField(
                        blank=True,
                        default="GKSport",
                        help_text="Имя отображаемое при получении сообщения.",
                        null=True,
                        verbose_name="Отправитель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Данные для подключения SMS.ru",
                "verbose_name_plural": "Данные для подключения SMS.ru",
            },
        ),
        migrations.CreateModel(
            name="TinkoffCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "terminal_key",
                    models.CharField(
                        blank=True,
                        help_text="Ключ терминала Tinkoff.",
                        max_length=512,
                        null=True,
                        verbose_name="Ключ терминала",
                    ),
                ),
                (
                    "terminal_pass",
                    models.CharField(
                        blank=True,
                        help_text="Пароль терминала Tinkoff.",
                        max_length=512,
                        null=True,
                        verbose_name="Пароль терминала",
                    ),
                ),
                (
                    "payment_success_url",
                    models.URLField(
                        blank=True,
                        help_text="Ссылка на которую будет переведён пользователь после успешной оплаты заказа.",
                        null=True,
                        verbose_name="Ссылка успешной оплаты",
                    ),
                ),
                (
                    "payment_fail_url",
                    models.URLField(
                        blank=True,
                        help_text="Ссылка на которую будет переведён пользователь после неудачной оплаты заказа.",
                        null=True,
                        verbose_name="Ссылка неудачной оплаты",
                    ),
                ),
            ],
            options={
                "verbose_name": "Данные для подключения Tinkoff",
                "verbose_name_plural": "Данные для подключения Tinkoff",
            },
        ),
    ]
