# Generated by Django 4.2.2 on 2024-06-16 06:11

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="About",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text1",
                    models.TextField(blank=True, null=True, verbose_name="Текст 1"),
                ),
                (
                    "image1",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="content",
                        verbose_name="Изображение для текст1",
                    ),
                ),
                (
                    "text2",
                    models.TextField(blank=True, null=True, verbose_name="Текст 2"),
                ),
                (
                    "image2",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="content",
                        verbose_name="Изображение для текст2",
                    ),
                ),
                (
                    "text3",
                    models.TextField(blank=True, null=True, verbose_name="Текст 3"),
                ),
                (
                    "image3",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="content",
                        verbose_name="Изображение для текст3",
                    ),
                ),
            ],
            options={
                "verbose_name": "О нас",
                "verbose_name_plural": "О нас",
            },
        ),
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="",
                        max_length=1023,
                        unique=True,
                        verbose_name="Название баннера",
                    ),
                ),
                (
                    "banner_image",
                    models.ImageField(
                        upload_to="content", verbose_name="Изображение баннера"
                    ),
                ),
                (
                    "adaptive_image",
                    models.ImageField(
                        upload_to="content",
                        verbose_name="Изображение баннера для мобильных устройств",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Активно"),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Порядковый номер баннера"
                    ),
                ),
                (
                    "banner_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="Ссылка баннера"
                    ),
                ),
            ],
            options={
                "verbose_name": "Баннер",
                "verbose_name_plural": "Баннеры",
                "ordering": ("priority",),
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Основной",
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator("\\A[+7,8]\\d{11,12}")
                        ],
                        verbose_name="Номер телефона",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="email"
                    ),
                ),
                (
                    "whatsapp1",
                    models.CharField(
                        blank=True,
                        help_text="Номер whatsapp1",
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("\\A[+7,8]\\d{11,12}")
                        ],
                        verbose_name="Номер whatsapp1",
                    ),
                ),
                (
                    "whatsapp2",
                    models.CharField(
                        blank=True,
                        help_text="Номер whatsapp2",
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator("\\A[+7,8]\\d{11,12}")
                        ],
                        verbose_name="Номер whatsapp2",
                    ),
                ),
                (
                    "telegram",
                    models.CharField(
                        blank=True,
                        help_text="Телеграмм",
                        max_length=12,
                        null=True,
                        verbose_name="Телеграмм",
                    ),
                ),
                (
                    "vk",
                    models.CharField(
                        blank=True,
                        help_text="В контакте",
                        max_length=128,
                        null=True,
                        verbose_name="В контакте",
                    ),
                ),
                (
                    "ok",
                    models.CharField(
                        blank=True,
                        help_text="Одноклассники",
                        max_length=128,
                        null=True,
                        verbose_name="Одноклассники",
                    ),
                ),
                (
                    "youtube",
                    models.URLField(
                        blank=True,
                        help_text="youtube",
                        max_length=64,
                        null=True,
                        verbose_name="Youtube",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="Адрес",
                        max_length=255,
                        null=True,
                        verbose_name="Адрес",
                    ),
                ),
                (
                    "latitude",
                    models.CharField(
                        blank=True,
                        help_text="Широта",
                        max_length=16,
                        null=True,
                        verbose_name="Широта",
                    ),
                ),
                (
                    "longitude",
                    models.CharField(
                        blank=True,
                        help_text="Долгота",
                        max_length=16,
                        null=True,
                        verbose_name="Долгота",
                    ),
                ),
            ],
            options={
                "verbose_name": "Контакты",
                "verbose_name_plural": "Контакты",
            },
        ),
        migrations.CreateModel(
            name="DeliveryMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Название",
                        max_length=128,
                        null=True,
                        verbose_name="Название",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Описание способа доставки"
                    ),
                ),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        default=0, help_text="Приоритет", verbose_name="Приоритет"
                    ),
                ),
            ],
            options={
                "verbose_name": "Способ доставки",
                "verbose_name_plural": "Способы доставки",
            },
        ),
        migrations.CreateModel(
            name="Documents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_agreement",
                    models.FileField(
                        blank=True,
                        help_text="Файл PDF с политикой оферты",
                        null=True,
                        upload_to="documents",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf"],
                                message="Для загрузки доступны только PDF файлы",
                            )
                        ],
                        verbose_name="Политика оферты",
                    ),
                ),
                (
                    "privacy_policy",
                    models.FileField(
                        blank=True,
                        help_text="Файл политики конфиденциальности",
                        null=True,
                        upload_to="documents",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf"],
                                message="Для загрузки доступны только PDF файлы",
                            )
                        ],
                        verbose_name="Политика конфиденциальности",
                    ),
                ),
            ],
            options={
                "verbose_name": "Документы",
                "verbose_name_plural": "Документы",
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.TextField(verbose_name="Вопрос")),
                ("answer", models.TextField(verbose_name="Ответ")),
                (
                    "priority",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Приоритет"
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQ",
                "ordering": ("priority",),
            },
        ),
        migrations.CreateModel(
            name="Header",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True, upload_to="logo", verbose_name="Логотип"
                    ),
                ),
            ],
            options={
                "verbose_name": "Хэдер",
                "verbose_name_plural": "Хэдер",
            },
        ),
        migrations.CreateModel(
            name="ReturnConditions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name='Текст для страницы "Условия возврата"',
                    ),
                ),
            ],
            options={
                "verbose_name": "Условия возврата",
                "verbose_name_plural": "Условия возврата",
            },
        ),
        migrations.CreateModel(
            name="RecipientEmail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, verbose_name="email")),
                (
                    "contacts",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipient_emails",
                        to="content.contact",
                        verbose_name="Контакты",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email для отправки",
                "verbose_name_plural": "Email`ы для отправки",
            },
        ),
        migrations.CreateModel(
            name="AboutImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="images", verbose_name="Изображение"),
                ),
                (
                    "about",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="images",
                        to="content.about",
                        verbose_name='Страница "О компании"',
                    ),
                ),
            ],
            options={
                "verbose_name": 'Изображение для страницы "О компании"',
                "verbose_name_plural": 'Изображения для страницы "О компании"',
            },
        ),
    ]
